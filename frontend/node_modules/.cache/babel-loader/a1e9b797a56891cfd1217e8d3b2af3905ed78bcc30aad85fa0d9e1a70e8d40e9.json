{"ast":null,"code":"var _jsxFileName = \"D:\\\\csvoicev2\\\\frontend\\\\src\\\\components\\\\VoiceBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FaTimes, FaMicrophone, FaStop, FaVolumeUp, FaVolumeMute } from 'react-icons/fa';\nimport { sendVoiceQuery } from '../services/api';\nimport { startRecording, stopRecording } from '../services/voiceService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VoiceBot({\n  onClose\n}) {\n  _s();\n  // State variables\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [audioResponse, setAudioResponse] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const [error, setError] = useState(null);\n\n  // References\n  const audioPlayer = useRef(null);\n  const mediaRecorder = useRef(null);\n  const audioChunks = useRef([]);\n\n  // Clean up on component unmount\n  useEffect(() => {\n    return () => {\n      if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\n        mediaRecorder.current.stop();\n      }\n      if (audioPlayer.current) {\n        audioPlayer.current.pause();\n      }\n    };\n  }, []);\n\n  // Handle recording start\n  const handleStartRecording = async () => {\n    try {\n      setError(null);\n      setIsRecording(true);\n      const {\n        recorder,\n        chunks\n      } = await startRecording();\n      mediaRecorder.current = recorder;\n      audioChunks.current = chunks;\n\n      // Handle recording stop event\n      mediaRecorder.current.onstop = async () => {\n        setIsRecording(false);\n        setIsProcessing(true);\n        try {\n          // Create audio blob and send to server\n          const audioBlob = new Blob(audioChunks.current, {\n            type: 'audio/wav'\n          });\n\n          // Send audio to backend\n          const response = await sendVoiceQuery(audioBlob, conversationHistory);\n\n          // Update state with response\n          setTranscript(response.transcript);\n          setAudioResponse(response.audio_response);\n          setConversationHistory(JSON.parse(response.conversation_history));\n          setIsProcessing(false);\n\n          // Play audio response if available\n          if (response.audio_response) {\n            playAudioResponse(response.audio_response);\n          }\n        } catch (error) {\n          console.error('Error processing voice:', error);\n          setError('Failed to process your request. Please try again.');\n          setIsProcessing(false);\n        }\n      };\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError('Could not access microphone. Please check your browser permissions.');\n      setIsRecording(false);\n    }\n  };\n\n  // Handle recording stop\n  const handleStopRecording = () => {\n    if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\n      stopRecording(mediaRecorder.current);\n    }\n  };\n\n  // Play audio response\n  const playAudioResponse = base64Audio => {\n    const audio = new Audio(`data:audio/mpeg;base64,${base64Audio}`);\n    audioPlayer.current = audio;\n    audio.onplay = () => setIsPlaying(true);\n    audio.onended = () => setIsPlaying(false);\n    audio.onerror = () => {\n      setIsPlaying(false);\n      setError('Failed to play audio response.');\n    };\n    audio.play();\n  };\n\n  // Toggle audio playback\n  const toggleAudioPlayback = () => {\n    if (audioPlayer.current) {\n      if (isPlaying) {\n        audioPlayer.current.pause();\n        setIsPlaying(false);\n      } else {\n        audioPlayer.current.play();\n      }\n    } else if (audioResponse) {\n      playAudioResponse(audioResponse);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-bot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-bot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Service Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-bot-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-area\",\n        children: [conversationHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing your request...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), (isRecording || transcript) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"You said:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: isRecording ? 'Listening...' : transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-bot-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `record-btn ${isRecording ? 'recording' : ''}`,\n        onClick: isRecording ? handleStopRecording : handleStartRecording,\n        disabled: isProcessing,\n        children: [isRecording ? /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isRecording ? 'Stop' : 'Speak'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), audioResponse && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playback-btn\",\n        onClick: toggleAudioPlayback,\n        children: [isPlaying ? /*#__PURE__*/_jsxDEV(FaVolumeMute, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(FaVolumeUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isPlaying ? 'Mute' : 'Listen'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-bot-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ask about products, order status, returns, or shipping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceBot, \"/gaAxOymxDwpOuSb45GxNGDgiQ0=\");\n_c = VoiceBot;\nexport default VoiceBot;\nvar _c;\n$RefreshReg$(_c, \"VoiceBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaTimes","FaMicrophone","FaStop","FaVolumeUp","FaVolumeMute","sendVoiceQuery","startRecording","stopRecording","jsxDEV","_jsxDEV","VoiceBot","onClose","_s","isRecording","setIsRecording","isProcessing","setIsProcessing","transcript","setTranscript","audioResponse","setAudioResponse","isPlaying","setIsPlaying","conversationHistory","setConversationHistory","error","setError","audioPlayer","mediaRecorder","audioChunks","current","state","stop","pause","handleStartRecording","recorder","chunks","onstop","audioBlob","Blob","type","response","audio_response","JSON","parse","conversation_history","playAudioResponse","console","handleStopRecording","base64Audio","audio","Audio","onplay","onended","onerror","play","toggleAudioPlayback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","role","content","disabled","_c","$RefreshReg$"],"sources":["D:/csvoicev2/frontend/src/components/VoiceBot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { FaTimes, FaMicrophone, FaStop, FaVolumeUp, FaVolumeMute } from 'react-icons/fa';\r\nimport { sendVoiceQuery } from '../services/api';\r\nimport { startRecording, stopRecording } from '../services/voiceService';\r\n\r\nfunction VoiceBot({ onClose }) {\r\n  // State variables\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [audioResponse, setAudioResponse] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [conversationHistory, setConversationHistory] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // References\r\n  const audioPlayer = useRef(null);\r\n  const mediaRecorder = useRef(null);\r\n  const audioChunks = useRef([]);\r\n  \r\n  // Clean up on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\r\n        mediaRecorder.current.stop();\r\n      }\r\n      if (audioPlayer.current) {\r\n        audioPlayer.current.pause();\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  // Handle recording start\r\n  const handleStartRecording = async () => {\r\n    try {\r\n      setError(null);\r\n      setIsRecording(true);\r\n      \r\n      const { recorder, chunks } = await startRecording();\r\n      mediaRecorder.current = recorder;\r\n      audioChunks.current = chunks;\r\n      \r\n      // Handle recording stop event\r\n      mediaRecorder.current.onstop = async () => {\r\n        setIsRecording(false);\r\n        setIsProcessing(true);\r\n        \r\n        try {\r\n          // Create audio blob and send to server\r\n          const audioBlob = new Blob(audioChunks.current, { type: 'audio/wav' });\r\n          \r\n          // Send audio to backend\r\n          const response = await sendVoiceQuery(audioBlob, conversationHistory);\r\n          \r\n          // Update state with response\r\n          setTranscript(response.transcript);\r\n          setAudioResponse(response.audio_response);\r\n          setConversationHistory(JSON.parse(response.conversation_history));\r\n          setIsProcessing(false);\r\n          \r\n          // Play audio response if available\r\n          if (response.audio_response) {\r\n            playAudioResponse(response.audio_response);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error processing voice:', error);\r\n          setError('Failed to process your request. Please try again.');\r\n          setIsProcessing(false);\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Error starting recording:', error);\r\n      setError('Could not access microphone. Please check your browser permissions.');\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n  \r\n  // Handle recording stop\r\n  const handleStopRecording = () => {\r\n    if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\r\n      stopRecording(mediaRecorder.current);\r\n    }\r\n  };\r\n  \r\n  // Play audio response\r\n  const playAudioResponse = (base64Audio) => {\r\n    const audio = new Audio(`data:audio/mpeg;base64,${base64Audio}`);\r\n    audioPlayer.current = audio;\r\n    \r\n    audio.onplay = () => setIsPlaying(true);\r\n    audio.onended = () => setIsPlaying(false);\r\n    audio.onerror = () => {\r\n      setIsPlaying(false);\r\n      setError('Failed to play audio response.');\r\n    };\r\n    \r\n    audio.play();\r\n  };\r\n  \r\n  // Toggle audio playback\r\n  const toggleAudioPlayback = () => {\r\n    if (audioPlayer.current) {\r\n      if (isPlaying) {\r\n        audioPlayer.current.pause();\r\n        setIsPlaying(false);\r\n      } else {\r\n        audioPlayer.current.play();\r\n      }\r\n    } else if (audioResponse) {\r\n      playAudioResponse(audioResponse);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"voice-bot-container\">\r\n      <div className=\"voice-bot-header\">\r\n        <h2>Customer Service Assistant</h2>\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          <FaTimes />\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"voice-bot-content\">\r\n        {/* Conversation area */}\r\n        <div className=\"conversation-area\">\r\n          {conversationHistory.map((message, index) => (\r\n            <div \r\n              key={index} \r\n              className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}\r\n            >\r\n              <div className=\"message-bubble\">\r\n                {message.content}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {isProcessing && (\r\n            <div className=\"processing-indicator\">\r\n              <div className=\"spinner\"></div>\r\n              <p>Processing your request...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Error message */}\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Transcript area - only show during/after recording */}\r\n        {(isRecording || transcript) && (\r\n          <div className=\"transcript-area\">\r\n            <h3>You said:</h3>\r\n            <p>{isRecording ? 'Listening...' : transcript}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"voice-bot-controls\">\r\n        {/* Recording button */}\r\n        <button \r\n          className={`record-btn ${isRecording ? 'recording' : ''}`}\r\n          onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n          disabled={isProcessing}\r\n        >\r\n          {isRecording ? <FaStop /> : <FaMicrophone />}\r\n          <span>{isRecording ? 'Stop' : 'Speak'}</span>\r\n        </button>\r\n        \r\n        {/* Playback button - only show when there's an audio response */}\r\n        {audioResponse && (\r\n          <button \r\n            className=\"playback-btn\"\r\n            onClick={toggleAudioPlayback}\r\n          >\r\n            {isPlaying ? <FaVolumeMute /> : <FaVolumeUp />}\r\n            <span>{isPlaying ? 'Mute' : 'Listen'}</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"voice-bot-footer\">\r\n        <p>Ask about products, order status, returns, or shipping</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VoiceBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}